# DO NOT EDIT THIS FILE. This file will be overwritten when re-running go-raml.
from .animal import animal
from .unhandled_api_error import UnhandledAPIError
from .unmarshall_error import UnmarshallError


class AnimalsService:
    """
    auto-generated. don't touch.
    """

    @staticmethod
    def _get_methods():
        return (("animals_get", ""),)

    def __init__(self, client):
        self.client = client

    def animals_get(
        self,
        depth=1,
        inspect=false,
        name=None,
        nodef=None,
        headers=None,
        query_params=None,
        content_type="application/json",
    ):
        """
        test query params
        It is method for GET /animals
        """
        if query_params is None:
            query_params = {}

        query_params["depth"] = depth
        query_params["inspect"] = inspect
        query_params["name"] = name
        query_params["nodef"] = nodef

        uri = self.client.base_url + "/animals"
        resp = self.client.get(uri, None, headers, query_params, content_type)
        try:
            if resp.status_code == 201:
                resps = []
                for elem in resp.json():
                    resps.append(animal(elem))
                return resps, resp

            message = "unknown status code={}".format(resp.status_code)
            raise UnhandledAPIError(
                response=resp, code=resp.status_code, message=message
            )
        except ValueError as msg:
            raise UnmarshallError(resp, msg)
        except UnhandledAPIError as uae:
            raise uae
        except Exception as e:
            raise UnmarshallError(resp, e.message)
